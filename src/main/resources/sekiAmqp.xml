<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/rabbit
           http://www.springframework.org/schema/rabbit/spring-rabbit-1.6.xsd">
           
    <!-- 定义消息转换器 -->
    <!-- <bean id="jackson2JsonMessageConverter" class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter"/> -->

    <!-- 定义amqp连接池工厂 -->
    <!-- <rabbit:connection-factory id="amqpConnectionFactoryA" addresses="${amqp.addressesA}"
                               username="${amqp.usernameA}" password="${amqp.passwordA}" virtual-host="${amqp.virtualhostA}"  /> -->


    <!-- 定义rabbit管理器, 默认自动查找类型为Queue, Exchange 和Binding的bean, 并宣称他们代表的broker的用户,
         因此在简单的Java driver中没有必要明确的使用那个bean -->
    <!-- <rabbit:admin id="adminA" connection-factory="amqpConnectionFactoryA" /> -->
    
    <!-- <rabbit:queue id="passport_queueA" name="passport_queue" durable="true" auto-delete="false" exclusive="false" declared-by="adminA"/> -->

    <!-- 定义rabbit管理器, 默认自动查找类型为Queue, Exchange 和Binding的bean, 并宣称他们代表的broker的用户,
        因此在简单的Java driver中没有必要明确的使用那个bean -->

    <!-- 定义exchange,模式fanout 手机号修改 -->
    <!-- <rabbit:fanout-exchange id="${amqp.exchange.nameA}" name="${amqp.exchange.nameA}" durable="true" declared-by="adminA">
    	<rabbit:bindings>  
            <rabbit:binding queue="${amqp.queue.nameA}"></rabbit:binding>  
        </rabbit:bindings>
    </rabbit:fanout-exchange> -->

    <!-- 定义exchange,模式fanout token失效 -->
    <!-- <rabbit:fanout-exchange id="${amqp.exchange.token.nameA}" name="${amqp.exchange.token.nameA}" durable="true" declared-by="adminA">
    	<rabbit:bindings>  
            <rabbit:binding queue="${amqp.queue.nameA}"></rabbit:binding>  
        </rabbit:bindings>
    </rabbit:fanout-exchange> -->
    
    <!-- 定义消息发送模板 -->
    <!-- <rabbit:template id="amqpTemplateA" connection-factory="amqpConnectionFactoryA" message-converter="jackson2JsonMessageConverter"/> -->
    
    <!-- <bean id="messageRabbitAListener" class="com.gomemyc.doubleAlive.rabbitmq.MessageRabbitAListener" lazy-init="true">
    </bean> -->
    
    
    
    <!--================================= 以下为B机房配置 ==========================================-->
    <!-- 定义amqp连接池工厂 -->
    <!-- <rabbit:connection-factory id="amqpConnectionFactoryB" addresses="${amqp.addressesB}"
                               username="${amqp.usernameB}" password="${amqp.passwordB}" virtual-host="${amqp.virtualhostB}"  />  -->

    <!-- 定义rabbit管理器, 默认自动查找类型为Queue, Exchange 和Binding的bean, 并宣称他们代表的broker的用户,
         因此在简单的Java driver中没有必要明确的使用那个bean -->
    <!-- <rabbit:admin id="adminB"  connection-factory="amqpConnectionFactoryB" /> -->
    
    <!--  <rabbit:queue id="passport_queueB" name="passport_queue" durable="true" auto-delete="false" exclusive="false" declared-by="adminB"/> -->
    
    <!-- 定义exchange,模式fanout 手机号修改 -->
    <!-- <rabbit:fanout-exchange id="${amqp.exchange.nameB}" name="${amqp.exchange.nameB}" durable="true" declared-by="adminB">
    	<rabbit:bindings>  
            <rabbit:binding queue="${amqp.queue.nameB}"></rabbit:binding>  
        </rabbit:bindings>
    </rabbit:fanout-exchange> -->

    <!-- 定义exchange,模式fanout token失效 -->
    <!-- <rabbit:fanout-exchange id="${amqp.exchange.token.nameB}" name="${amqp.exchange.token.nameB}" durable="true" declared-by="adminB">
    	<rabbit:bindings>  
            <rabbit:binding queue="${amqp.queue.nameB}"></rabbit:binding>  
        </rabbit:bindings>
    </rabbit:fanout-exchange> -->
    
    <!-- 定义消息发送模板 -->
    <!-- <rabbit:template id="amqpTemplateB" connection-factory="amqpConnectionFactoryB" message-converter="jackson2JsonMessageConverter"/> -->
    
    <!-- queue litener 观察 监听模式 当有消息到达时会通知监听在对应的队列上的监听对象 -->
   <!--  <rabbit:listener-container connection-factory="amqpConnectionFactoryA">
        <rabbit:listener queues="${amqp.queue.nameA}" ref="messageRabbitAListener" />
    </rabbit:listener-container> -->
    
    <!-- queue litener 观察 监听模式 当有消息到达时会通知监听在对应的队列上的监听对象 -->
    <!-- <rabbit:listener-container  connection-factory="amqpConnectionFactoryB">
        <rabbit:listener queues="${amqp.queue.nameB}" ref="messageRabbitBListener" />
    </rabbit:listener-container> -->
    
    <!-- <bean id="messageRabbitBListener" class="com.gomemyc.doubleAlive.rabbitmq.MessageRabbitBListener" lazy-init="true">
    </bean> -->
    
    
</beans>